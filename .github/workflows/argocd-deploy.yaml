name: Argo CD Deployment

on:
  push:
    branches:
      - main # Trigger build on push to main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SHORT_SHA: ${{ github.event.after }}  # Extract the short SHA of the commit

jobs:
  build:
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and Push Multi-Platform Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            evilpandas/sw-simple:${{ env.SHORT_SHA }}
            evilpandas/sw-simple:latest # Optional: Also tag as latest

  deploy-to-stage:
    needs: build
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update Image Tag in Kustomization
        run: |
          kustomize edit set image evilpandas/sw-simple:${{ env.SHORT_SHA }}

      - name: Deploy to Stage (Manual Approval)
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'argocd-deploy.yaml',
              ref: 'main',
              inputs: {
                environment: 'stage',
                image_tag: '${{ env.SHORT_SHA }}' # Pass short SHA
              }
            })

  deploy-to-prod:
    needs: deploy-to-stage
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'stage'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update Image Tag in Kustomization
        run: |
          kustomize edit set image evilpandas/sw-simple:${{ github.event.inputs.image_tag }}

      - name: Deploy to Prod (Manual Approval)
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'argocd-deploy.yaml',
              ref: 'main',
              inputs: {
                environment: 'prod',
                image_tag: '${{ github.event.inputs.image_tag }}'
              }
            })